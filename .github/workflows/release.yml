name: release
on:
  push:
    tags: ["v*.*.*"]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            goos: darwin
            goarch: arm64
            ext: ""
          - os: macos-latest
            goos: darwin
            goarch: amd64
            ext: ""
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ""
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            ext: ""
          - os: windows-latest
            goos: windows
            goarch: amd64
            ext: ".exe"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Build
        run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ocx${{ matrix.ext }} ./cmd/ocx
      - name: Package (non-Windows)
        if: matrix.goos != 'windows'
        run: |
          tar -czf ocx_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz ocx${{ matrix.ext }}
      - name: Package (Windows)
        if: matrix.goos == 'windows'
        shell: pwsh
        run: |
          Compress-Archive -Path ocx${{ matrix.ext }} -DestinationPath ocx_${{ matrix.goos }}_${{ matrix.goarch }}.zip
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ocx_*.tar.gz
            ocx_*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
